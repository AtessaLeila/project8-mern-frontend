{"version":3,"sources":["components/Button/Button.js","components/Searchfield/Searchfield.js","components/Catalogue/CatalogueHeader.js","components/Catalogue/CatalogDetail.js","components/Catalogue/ItemForm.js","components/Box/Box.js","components/Catalogue/CatalogueSidebar.js","components/Catalogue/CatalogHome.js","components/Catalogue/Catalogue.js","components/Order/OrderHeader.js","components/CardOrder/CardOrder.js","components/Order/OrderGridCard.js","components/Dropdown/Dropdown.js","components/Order/OrderSidebar.js","components/Order/OrderDetail.js","components/Order/Order.js","components/SignUpForm/SignUpForm.js","components/LogInForm/LogInForm.js","components/LogOut/LogOut.js","App.js","serviceWorker.js","index.js"],"names":["Button","props","classList","types","includes","type","push","className","join","label","Searchfield","onChange","e","setState","value","target","onSubmit","preventDefault","fetch","url","state","then","res","json","id","_id","redirect","searchSubmit","this","to","style","placeholder","name","Component","CatalogueHeader","border","fontSize","height","width","small","marginRight","CatalogDetail","componentDidMount","description","unit","price","unitPrice","inventory","inventoryCount","image","ready","deleted","editItem","setId","deleteItem","options","body","JSON","stringify","alert","backgroundImage","onClick","ItemForm","submitUrl","method","category","success","cancelForm","as","color","Box","backgroundSize","CatalogueSidebar","items","axios","get","response","data","catch","error","console","log","itemsArr","map","val","idx","key","displayBoxes","CatalogHome","Catalogue","resetState","currentId","path","render","marginLeft","component","exact","OrderHeader","CardOrder","orderNumber","customer","occasion","dueDate","OrderGridCard","orders","orderList","ordersArr","displayOrders","Dropdown","item","OrderSidebar","customerOptions","typeChange","dropdownChange","statusOptions","status","newVal","filter","obj","undefined","arr","setList","clearFilters","window","location","field","select","borderRadius","display","backgroundColor","padding","OrderDetail","displayItems","index","itemName","quantity","updateStatus","newStatus","sendNewStatus","headers","setStatusButton","customerName","customerAddress","customerPhone","subTotal","tax","total","statusColor","address","phone","orderInfo","Order","list","SignUpForm","isLoggedIn","htmlFor","handleInput","handleSignUp","LogInForm","handleLogIn","LogOut","handleLogOut","App","email","password","bind","localStorage","token","clear","post","err","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","registration","unregister","message"],"mappings":"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","file":"static/js/main.140c2554.chunk.js","sourcesContent":["import React from 'react';\nimport './Button.css'\n\n\nconst Button = (props) => {\n    let classList = [];\n\n    let types = ['confirm', 'ready', 'delivered', 'edit', 'create', 'delete', 'new', 'submitbtn', 'detail']\n\n    if (types.includes(props.type)) {\n        classList.push(`button-${props.type}`)\n    }\n\n    if (types.includes(props.type)) {\n        classList.push(`button-${props.type}-detail`)\n    }\n\n    return <button className={classList.join(\" \")}>{props.label}</button>\n\n}\n\nexport default Button; ","import React, {Component} from 'react';\nimport './Searchfield.css';\nimport { Redirect } from 'react-router-dom'\n\nclass Searchfield extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            value: \"\"\n            ,id: \"\"\n            ,redirect: false\n        }\n\n        this.classList = [];\n        this.types = ['submit']\n    }\n\n\n    onChange = (e) => {\n        this.setState({\n            value: e.target.value \n        })\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault()\n        fetch(`${this.props.url}/item/name/${this.state.value}`)\n            .then(res => res.json())\n            .then(res =>{\n                this.setState({\n                    id : res[0]._id \n                    ,redirect: true\n                })\n                this.props.searchSubmit(this.state.id)\n            })\n            \n            \n    }\n    \n    render(props){\n\n        if (this.types.includes(this.props.type)) {\n            this.classList.push(`button-${this.props.type}`)\n        }\n        if (this.state.redirect === true){\n            this.setState({\n                redirect:false\n            })\n            return  <Redirect to={`/catalog/item/id/${this.state.id}`} />\n          } \n        \n    return (\n        <div>\n            <div className=\"form\">\n                <form className=\"searchfield-form\"onSubmit={this.onSubmit}>\n                    <input style={this.props.style}\n                        placeholder={this.props.placeholder}\n                        name={this.props.name}\n                        onChange={this.onChange}\n\n                    />\n                    <div className=\"btn\">\n                    <input type=\"submit\" className={this.classList.join(\" \")}  /*onClick={handleSubmit}*/ />\n                    </div>\n                </form>\n            </div>\n\n\n        </div>\n    )\n    }\n\n\n}\n\nexport default Searchfield;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"../Button/Button\";\nimport Searchfield from \"../Searchfield/Searchfield\";\n\nfunction CatalogueHeader(props) {\n\n    const searchFieldStyle = {\n        border: \"3px solid #F1F3F4\",\n        fontSize: \"15px\",\n        height: \"30px\",\n        width: \"170px\",\n    }\n\n    const buttonStyle = {\n        marginRight: \"20px\",\n    }\n\n    let searchSubmit = (value) => {\n        props.searchSubmit(value)\n    }\n\n\n    return (\n        <div className=\"catalogue-header\">\n            <div className=\"catalogue-searchfield\">\n                <Searchfield style={searchFieldStyle} className=\"catalogue-header-search\" name=\"Submitbtn\" type=\"submit\" placeholder=\"Search your catalogue...\" small url={props.url} searchSubmit={searchSubmit} />\n            </div>\n            <div className=\"new-item-button\">\n                <Link to=\"/catalog/item/new\">\n                    <Button style={buttonStyle} type=\"create\" label=\"+ New Item\" />\n                </Link>\n            </div>\n\n        </div>\n    )\n\n}\n\nexport default CatalogueHeader\n","import React, { Component } from 'react'\nimport Button from '../Button/Button'\nimport { Link } from 'react-router-dom'\n\nexport class CatalogDetail extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            id: \"\"\n            ,name: \"\"\n            ,description: \"\"\n            ,unit: 0\n            ,price: 0\n            ,inventory: 0\n            ,image: \"\"\n        }\n        this.id = this.props.id\n    }\n\n    componentDidMount = () => {\n        fetch(`${this.props.url}/item/id/${this.props.id}`)\n            .then(res => res.json())\n            .then(res => {\n                this.setState({\n                    id: res._id\n                    ,name: res.name\n                    ,description: res.description\n                    ,unit: res.unit\n                    ,price: res.unitPrice\n                    ,inventory: res.inventoryCount\n                    ,image: res.image\n                    ,ready: true\n                    ,deleted: false\n                })\n            })\n\n    }\n\n    componentDidUpdate(props) {\n        if (props.id !== this.props.id) {\n            fetch(`${this.props.url}/item/id/${this.props.id}`)\n                .then(res => res.json())\n                .then(res => {\n                    this.setState({\n                        name: res.name\n                        , description: res.description\n                        , unit: res.unit\n                        , price: res.unitPrice\n                        , inventory: res.inventoryCount\n                        , image: res.image\n                        , ready: true\n                    })\n                })\n        }\n    }\n\n    editItem = () => {\n      this.props.setId(this.state.id)\n    }\n\n    deleteItem = () =>{\n        const options = {\n            \"method\": \"DELETE\"\n            ,\"headers\" : { \"Content-Type\" : \"application/json\"}\n            ,body: JSON.stringify(this.state)\n        } \n        fetch(`${this.props.url}/item/name/${this.state.name}`, options)\n        .then(res => res.json())\n        .then(res =>{\n            this.setState({\n                ready: false\n                ,deleted: true\n            })\n            return alert(\"The item has been deleted\")\n        })\n    }\n\n    render() {\n        if (this.state.ready === true){\n        return (\n            <div className=\"item-detail\">\n            <div className=\"item-detail-image\" style={{backgroundImage: `url(${this.state.image}`}}></div>\n            <div className=\"item-detail-row-one\">\n                <h1>{this.state.name}</h1>\n                <h3>{this.state.description}</h3>\n            </div>\n            <div className=\"item-detail-row-two\">\n                <div className=\"row-two-unit-price\">\n                    <h2>Unit Size: {this.state.unit}</h2>\n                    <h2>Price: ${this.state.price}</h2>\n                </div>\n                <div className=\"row-two-inventory\">\n                    <h2>In Stock: {this.state.inventory}</h2>\n                </div>\n            </div>\n            <div className=\"item-detail-buttons\">\n                <div onClick={this.deleteItem} >\n                    <Button type=\"delete\" label=\"Delete\" />\n                </div>\n                <Link to={`/catalog/item/edit/${this.state.id}`} onClick={this.editItem}>\n                    <Button type=\"edit\" label=\"Edit\"  />\n                </Link>\n            </div>\n        </div>\n        )\n        } else if (this.state.deleted === true){\n            return (<div>\n                <Link to=\"/catalog\">\n                    <Button type=\"edit\" label=\"Back to Catalog\"  />\n                </Link>\n            </div>)\n        } else {return null}\n    }\n  }\n\n\nexport default CatalogDetail;\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport Button from \"../Button/Button\"\n\nexport class ItemForm extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            name: \"\"\n            ,description: \"\"\n            ,category: \"\"\n            ,unit: 0\n            ,unitPrice: 0\n            ,inventoryCount: 0\n            ,image: \"\"\n            ,success: false\n            ,ready: false\n        }\n    }\n\n    componentDidMount(){\n        if (this.props.id){\n            fetch(`${this.props.url}/item/id/${this.props.id}`)\n            .then(res => res.json())\n            .then(res =>{\n                this.setState({\n                    name: res.name\n                    ,description: res.description\n                    ,category: res.category\n                    ,unit: res.unit\n                    ,unitPrice: res.unitPrice\n                    ,inventoryCount: res.inventoryCount\n                    ,image: res.image\n                    ,ready: true\n                })\n            })\n        }\n        else {\n            this.setState({\n                ready: true\n            })\n        }\n    }\n\n    onChange = (e) =>{\n        e.preventDefault()\n\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n\n    }\n\n    onSubmit = (e) =>{\n        e.preventDefault()\n        let submitUrl = \"\"\n        \n        if (this.props.method === \"POST\"){\n            submitUrl = `${this.props.url}/item`\n        }\n        else {\n            submitUrl = `${this.props.url}/item/name/${this.state.name}`\n        }\n        const options = {\n            \"method\": this.props.method\n            ,\"headers\" : { \"Content-Type\" : \"application/json\"}\n            ,body: JSON.stringify(this.state)\n        } \n        fetch(submitUrl, options)\n        .then(res => res.json())\n        .then(res =>{\n            this.setState({\n                name: \"\"\n                ,description: \"\"\n                ,category: \"\"\n                ,unit: 0\n                ,unitPrice: 0\n                ,inventoryCount: 0\n                ,image: \"\"\n                ,success: true\n            })\n        })\n\n\n    }\n\n    cancelForm = () =>{\n\n    }\n\n    render() {\n        if (this.state.success){\n         return (\n             <div><h2>Success!</h2></div>\n         )       \n        }\n        else if (this.state.ready && this.props.id){\n        return (\n            <form className=\"item-form\" onSubmit={this.onSubmit}>\n                <div className=\"item-form-image\" style={{backgroundImage: `url(${this.state.image})`}}>\n    \n                    <input className=\"item-form-add-image\" type=\"text\" name=\"image\" value={this.state.image} onChange={this.onChange} />\n                </div>\n                <div className=\"item-form-row-one\">\n                    <h2>Enter the details for the new item.</h2>\n                    <input className=\"item-form-name item-form-input\" type=\"text\" name=\"name\" value={this.state.name} onChange={this.onChange} />\n                    <input className=\"item-form-category item-form-input\" type=\"text\" name=\"category\" value={this.state.category} onChange={this.onChange} />\n                    <textarea className=\"item-form-detail item-form-input\" name=\"description\" value={this.state.description} onChange={this.onChange} />\n                </div>\n                <div className=\"item-form-row-two\">\n                    <div className=\"item-form-row-two-unit-price\">\n                        <input className=\"item-form-unit\" type=\"number\" name=\"unit\" value={this.state.unit} onChange={this.onChange} />\n                        <input className=\"item-form-unit\" type=\"number\" name=\"unitPrice\" value={this.state.unitPrice} onChange={this.onChange} />\n                    </div>\n                    <div className=\"item-form-row-two-inventory\">\n                    <input className=\"item-form-inventory\" type=\"number\" name=\"inventoryCount\" value={this.state.inventoryCount} onChange={this.onChange} />\n                    </div>\n                </div>\n                <div className=\"item-form-buttons\">\n                    <Link to=\"/catalog\"><Button type=\"delete\" label=\"Cancel\" /></Link>\n                    <Button as=\"submit\" type=\"edit\" label=\"Submit\" />\n                </div>\n            </form>\n        )\n        } else if(this.state.ready /* && this.props.id == false */) {return(\n            <form className=\"item-form\" onSubmit={this.onSubmit}>\n                <div className=\"item-form-image\">\n                    <h3 style={{color: \"white\"}}>Placeholder</h3>\n                    <input className=\"item-form-add-image\" type=\"text\" name=\"image\" placeholder=\"Image Url\" onChange={this.onChange} />\n                </div>\n                <div className=\"item-form-row-one\">\n                    <h2>Enter the details for the new item.</h2>\n                    <input className=\"item-form-name item-form-input\" type=\"text\" name=\"name\" placeholder=\"Item Name\" onChange={this.onChange} />\n                    <input className=\"item-form-category item-form-input\" type=\"text\" name=\"category\" placeholder=\"Item Category\" onChange={this.onChange} />\n                    <textarea className=\"item-form-detail item-form-input\" name=\"description\" placeholder=\"Item Description\" onChange={this.onChange} />\n                </div>\n                <div className=\"item-form-row-two\">\n                    <div className=\"item-form-row-two-unit-price\">\n                        <input className=\"item-form-unit\" type=\"number\" name=\"unit\" placeholder=\"Unit Size\" onChange={this.onChange} />\n                        <input className=\"item-form-unit\" type=\"number\" name=\"unitPrice\" placeholder=\"Unit Price\" onChange={this.onChange} />\n                    </div>\n                    <div className=\"item-form-row-two-inventory\">\n                    <input className=\"item-form-inventory\" type=\"number\" name=\"inventoryCount\" placeholder=\"Inventory Ct.\" onChange={this.onChange} />\n                    </div>\n                </div>\n                <div className=\"item-form-buttons\">\n                    <Link to=\"/catalog\"><Button type=\"delete\" label=\"Cancel\" /></Link>\n                    <Button as=\"submit\" type=\"edit\" label=\"Create\" />\n                </div>\n            </form>\n        )} else {return <p>something</p>}\n    }\n}\n\nexport default ItemForm\n","import React from 'react';\nimport './Box.css';\n// import Button from '../Button/Button'\n\nconst Box = (props) => {\n\n    return (\n        <div>\n            <div className=\"sidebar-item-box\">\n                <div className=\"item-box-placeholder-img\" style={{ backgroundImage: `url(${props.image})`, backgroundSize: \"cover\" }}></div>\n                <p>{props._id}</p>\n                <p>{props.name}</p>\n                <p>{props.unitPrice}</p>\n                {/* <Button type=\"detail\" label=\"Detail\" /> */}\n            </div>\n        </div>\n    )\n}\n\nexport default Box; ","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './CatalogueSidebar.css'\nimport Box from '../Box/Box'\n\nimport { Link } from \"react-router-dom\";\n\n\nclass CatalogueSidebar extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            items: [],\n            ready: false\n        };\n    }\n\n    componentDidMount() {\n        axios.get('https://group-project-mern-backend.herokuapp.com/item')\n            .then(response => {\n                this.setState({\n                    items: response.data,\n                    ready: true\n                })\n\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n\n    displayBoxes() {\n        let itemsArr = this.state.items\n        itemsArr = itemsArr.map((val, idx) => {\n\n            let newItem = <div key={idx}className=\"link\"><Link to={\"/catalog/item/id/\" + val._id} id={val._id} onClick={() => { this.setId(val._id) }}><Box id={val._id} name={val.name} image={val.image} price={val.unitPrice} key={idx} /></Link></div>;\n            return (\n                newItem\n            )\n        })\n        return itemsArr\n    }\n\n    setId(id) {\n        this.props.setId(id)\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"sidebar scroll\">\n                    {this.state.ready === true ? this.displayBoxes() : null}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CatalogueSidebar;","import React from 'react'\n\nfunction CatalogHome() {\n    return (\n        <div className=\"item-detail\">\n            <div className=\"catalog-home-container\">\n                <h1>Welcome back!</h1>\n                <h2>Click an item on the left or search in the search bar to show the item details.</h2>\n            </div>\n        </div>\n    )\n}\n\nexport default CatalogHome ","import React, { Component } from 'react'\nimport CatalogueHeader from './CatalogueHeader'\nimport CatalogueDetail from './CatalogDetail'\nimport ItemForm from './ItemForm'\nimport { Route } from 'react-router-dom'\nimport CatalogueSidebar from './CatalogueSidebar'\nimport './CatalogueSidebar.css'\nimport CatalogHome from './CatalogHome'\n\nclass Catalogue extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            currentId: \"\"\n            ,ready: false\n        }\n    }\n\n    resetState = () => {\n        this.setState({\n            currentId: \"\"\n            , ready: false\n        })\n    }\n\n    searchSubmit = (value) => {\n        this.setState({\n            currentId: value\n            , ready: true\n        })\n\n    }\n\n    render() {\n        return (\n            <div className=\"catalogue-main\">\n                <Route path=\"/catalog\"\n                    render={() => {\n                        return (<div className=\"catalogue-main\">\n                            <CatalogueHeader url={this.props.url} searchSubmit={this.searchSubmit} />\n                            <div className=\"catalogue-body\">\n                                <div className=\"catalogue-sidebar\" style={{ marginLeft: \"10px\", marginRight: \"20px\" }}>\n                                    <CatalogueSidebar setId={this.searchSubmit} />\n                                </div>\n                                    <Route path=\"/catalog\" component={CatalogHome} exact />\n                    \n                    <Route path=\"/catalog/item/new\" \n                        render={()=>{return(\n                        <div className=\"item-form-body\">\n                            <ItemForm url={this.props.url} method={\"POST\"}/>\n                        </div>)}} exact />\n\n                    <Route path={`/catalog/item/edit/${this.state.currentId}`} \n                        render={()=>{return(\n                        <div className=\"item-form-body\">\n                            <ItemForm url={this.props.url} id={this.state.currentId} method={\"PUT\"}  />\n                        </div>)}} exact />\n\n                    <Route path={`/catalog/item/id/${this.state.currentId}`}\n                        render={()=>{ \n                            if(this.state.ready === true){\n                                return(<CatalogueDetail url={this.props.url} id={this.state.currentId} setId={this.searchSubmit} />)\n                            }\n                            else {return null}\n                        }} exact />\n                            </div>\n                        </div>)\n                    }}\n                />\n\n        </div>\n    )\n    }\n}\n\nexport default Catalogue\n","import React from 'react'\n\n\nfunction OrderHeader() {\n    return (\n        <div className=\"order-header\">\n            \n        </div>\n    )\n}\n\nexport default OrderHeader\n","import React from 'react';\nimport './CardOrder.css'\nimport {Link} from 'react-router-dom'\n\nconst CardOrder = (props) => {\n\n    return (\n        <div className=\"flexbox\">\n            <Link to={\"/orders/id/\" + props.id} className=\"flexbox-link\"  onClick={() => {props.setId(props.id) }}>\n            <div className=\"card-order\">\n                <p>Order Number: {props.orderNumber}</p>\n                <p>Customer Name: {props.customer}</p>\n                <p>Occasion: {props.occasion}</p>\n                <p>Due Date: {props.dueDate}</p>\n            </div>\n            </Link>\n        </div>\n    )\n}\n\nexport default CardOrder; ","import React, { Component } from 'react';\nimport axios from 'axios';\nimport CardOrder from '../CardOrder/CardOrder';\n\n\nclass OrderGridCard extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            orders: [],\n            ready: false\n        };\n    }\n\n    componentDidMount() {\n         \n            axios.get('https://group-project-mern-backend.herokuapp.com/order')\n                .then(response => {\n                    this.setState({\n                        orders: response.data,\n                        ready: true\n                    })\n\n                })\n                .catch(function (error) {\n                    console.log(error);\n                })\n    }\n\n    componentDidUpdate(props) {\n        if (props.orderList !== this.props.orderList){\n                this.setState({\n                    orders: this.props.orderList,\n                    ready: true\n                })\n        }\n    }\n\n    displayOrders() {\n        let ordersArr = this.state.orders\n        ordersArr = ordersArr.map((val, idx) => {\n\n            let newOrder = \n            \n            <CardOrder id={val._id} orderNumber={val.orderNumber} customer={val.customer.name} occasion={val.occasion} dueDate={val.dueDate} key={idx} setId={this.setId} />;\n            return (\n                newOrder\n            )\n        })\n        return ordersArr\n    }\n\n    setId = (id) =>{\n        this.props.setId(id)\n    }\n\n    render() {\n        return (\n            <div className=\"order-grid-card\">\n                {this.state.ready === true ? this.displayOrders() : null}\n            </div>\n        )\n    }\n}\n\nexport default OrderGridCard;\n\n","import React from 'react';\n\n\n\nfunction Dropdown(props) {\n    const items = props.options\n      \n    return (\n        <select style={props.style} onChange={e => {props.onChange(e.target.value)}}>\n            <option value=\"null\" >Select...</option>\n            {items.map((item, idx) => (\n                <option\n                    key={idx}\n                    value={item}\n                >\n                    {item}\n                </option>\n            ))}\n        </select>\n    );\n}\n\nexport default Dropdown;","import React, { Component } from 'react'\nimport Dropdown from '../Dropdown/Dropdown'\nimport Button from '../Button/Button'\n\nclass OrderSidebar extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            statusOptions: [\"Unconfirmed\",\"Confirmed\",\"Ready\",\"Delivered\"]\n            ,customerOptions: []\n            ,ready: false\n            ,orderNumber: null\n            ,status: null\n            ,customer: null\n            ,dueDate: null\n\n        }\n    }\n\n    componentDidMount = () => {\n        fetch(`${this.props.url}/order/customers`)\n            .then(res => res.json())\n            .then( res => {\n                this.setState({\n                    customerOptions: res\n                    ,ready: true\n                })\n            })\n    }\n\n\n    typeChange = (e) =>{\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    dropdownChange = (e) =>{\n        if (this.state.statusOptions.includes(e)){\n            this.setState({       \n                status: e\n            })\n        }\n        else {\n            this.setState({\n                customer: e\n            })\n        }\n    }\n\n    onSubmit = (e) => { \n        e.preventDefault()\n        \n        fetch(`${this.props.url}/order`)\n            .then(res => res.json())\n            .then( res => {\n                if (this.state.status !== null){\n                    let newArr = res.map((val, idx) => {\n                        let newVal\n                        if (val.status === this.state.status) {\n                            newVal = val\n                        }\n                        return newVal\n                    })\n                    return newArr.filter(obj => obj !== undefined)\n                } else {return res}\n            })\n            .then( arr => {\n                if (this.state.dueDate !== null){\n                    let newArr = arr.map((val, idx) => {\n                        let newVal\n                        if (val.dueDate === this.state.dueDate) {\n                            newVal = val\n                        }\n                        return newVal\n                    })\n                    return newArr.filter(obj => obj !== undefined)\n                } else {return arr}\n            })\n            .then( arr => {\n                 if (this.state.customer !== null){\n                     let newArr = arr.map((val, idx) => {\n                         let newVal\n                         if (val.customer.name === this.state.customer) {\n                             newVal = val\n                         }\n                         return newVal\n                     })\n                     return newArr.filter(obj => obj !== undefined)\n                 }\n                 else {return arr}\n             })\n             .then( arr => {\n                 if (this.state.orderNumber !== null){\n                     let newArr = arr.map((val, idx) => {\n                         let newVal\n                         if (val.orderNumber === this.state.orderNumber) {\n                             newVal = val\n                         }\n                         return newVal\n                     })\n                     return newArr.filter(obj => obj !== undefined)\n                 } else {return arr}\n             })\n             .then(arr =>{\n                 this.props.setList(arr)\n                 this.setState({\n                    orderNumber: null\n                    ,status: null\n                    ,customer: null\n                    ,dueDate: null\n                 })\n                 \n             })\n    }\n\n    clearFilters = () => {\n       /*  axios.get('https://group-project-mern-backend.herokuapp.com/order')\n                .then(response => {\n                    this.props.setList(response.data)\n                })\n                .catch(function (error) {\n                    console.log(error);\n                }) */\n\n                window.location = \"/orders\"\n        \n    }\n\n    render(){\n        const field = {\n            border: \"3px solid #F1F3F4\",\n            fontSize: \"15px\",\n            height: \"30px\",\n            width: \"170px\",\n        }\n\n        const select = {\n            border: \"3px solid #F1F3F4\",\n            borderRadius: \"6px\",\n            fontSize: \"15px\",\n            height: \"35px\",\n            width: \"200px\",\n            display: \"block\",\n            color: \"#757575\"\n        }\n\n        const subBut = {\n            backgroundColor: \"#9fc3cc\",\n            color: \"#3c3c3c\",\n            border: \"none\",\n            borderRadius: \"2px\",\n            padding: \"12px 20px\",\n            marginRight: \"20px\"\n        }\n\n        return (\n            <div className=\"order-sidebar-container\">\n                <h2>Filters</h2>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"order-sidebar-order-no\">\n                        <h3>Order #</h3>\n                        <input type=\"number\" name=\"orderNumber\" style={field} onChange={this.typeChange} />\n                        \n                    </div>\n                    <div className=\"order-sidebar-status\">\n                        <h3>Status</h3>\n                    <Dropdown style={select} options={this.state.statusOptions} onChange={this.dropdownChange} />\n                    </div>\n                    <div className=\"order-sidebar-customers\">\n                        <h3>Customer</h3>\n                    {this.state.ready === true ? <Dropdown style={select} options={this.state.customerOptions} onChange={this.dropdownChange} /> : null }\n                    </div>\n                    <div className=\"order-sidebar-order-no\" >\n                        <h3>Due Date</h3>\n                        <input type=\"text\" name=\"dueDate\" style={field} onChange={this.typeChange}/>\n                    </div>\n                    <div className =\"order-sidebar-buttons-container\">\n                        <input type=\"submit\" style={subBut} />\n                        <div onClick={this.clearFilters}>\n                        <Button type=\"delete\" label=\"Clear\" />\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default OrderSidebar\n","import React, { Component } from \"react\";\nimport Button from \"../Button/Button\";\nimport \"./OrderDetail.css\";\n\nclass OrderDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orderNumber: 0,\n      customerName: \"\",\n      customerAddress: \"\",\n      customerPhone: \"\",\n      dueDate: \"\",\n      subTotal: 0,\n      tax: 0,\n      total: 0,\n      status: \"\",\n      items: [],\n      statusColor: \"\",\n      ready: false,\n    };\n    this.id = \"5f2c4dc6dd12ce0004e869b4\";\n  }\n\n  componentDidMount() {\n    fetch(`${this.props.url}/order/id/${this.props.id}`)\n      .then(res => res.json())\n      .then(res => {\n        // console.log(res);\n        this.setState({\n          orderNumber: res.orderNumber,\n          customerName: res.customer.name,\n          customerAddress: res.customer.address,\n          customerPhone: res.customer.phone,\n          dueDate: res.dueDate,\n          subTotal: res.subTotal,\n          tax: res.tax,\n          total: res.total,\n          status: res.status,\n          items: res.orderInfo,\n          ready: true,\n        });\n        if (this.state.status === \"Ready\") {\n          this.setState({ statusColor: \"#ECE2BE\" });\n        } else if (this.state.status === \"Delivered\") {\n          this.setState({ statusColor: \"#bdd49a\" });\n        } else if (this.state.status === \"Confirmed\") {\n          this.setState({ statusColor: \"#91bfb6\" });\n        } else if (this.state.status === \"Unconfirmed\") {\n          this.setState({ statusColor: \"#ba6d6b\" });\n        } else {\n        }\n      });\n  }\n\n  displayItems = () => {\n    let orderItems = this.state.items.map((value, index) => {\n      let singleItem = (\n        <div className=\"order-box\" key={index}>\n          <div className=\"order-box-item\">\n            <p className=\"order-val\">{value.itemName}</p>\n          </div>\n          <div className=\"order-box-item\">\n            <p className=\"order-val\">{value.quantity}</p>\n          </div>\n          <div className=\"order-box-item\">\n            <p className=\"order-val\">{value.unitPrice}</p>\n          </div>\n        </div>\n      );\n      return singleItem;\n    });\n    return orderItems;\n  };\n\n  updateStatus = () => {\n    console.log(this.state.status);\n    let newStatus = \"\";\n    if (this.state.status === \"Unconfirmed\") {\n      newStatus = \"Confirmed\";\n    } else if (this.state.status === \"Confirmed\") {\n      newStatus = \"Ready\";\n    } else if (this.state.status === \"Ready\") {\n      newStatus = \"Delivered\";\n    }\n    this.setState(\n      {\n        status: newStatus,\n      },\n      () => {\n        this.sendNewStatus();\n      }\n    );\n  };\n\n  sendNewStatus = () => {\n    console.log(this.state);\n\n    const options = {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(this.state),\n    };\n    fetch(`${this.props.url}/order/id/${this.id}`, options)\n      .then(res => res.json())\n      .then(res => {\n        console.log(res);\n        console.log(\"Status Changed!\");\n      });\n  };\n\n  setStatusButton = () => {\n    if (this.state.status === \"Ready\") {\n      return (\n        <div onClick={this.updateStatus}>\n          <Button type=\"delivered\" label=\"Mark as Delivered\" />\n        </div>\n      );\n    } else if (this.state.status === \"Unconfirmed\") {\n      return (\n        <div onClick={this.updateStatus}>\n          <Button type=\"confirm\" label=\"Mark as Confirmed\" />\n        </div>\n      );\n    } else if (this.state.status === \"Confirmed\") {\n      return (\n        <div onClick={this.updateStatus}>\n          <Button type=\"ready\" label=\"Mark as Ready\" />\n        </div>\n      );\n    } else if (this.state.status === \"Delivered\") {\n      return (\n        <div>\n          <Button type=\"delivered\" label=\"Delivery Complete\" />\n        </div>\n      );\n    } else {\n    }\n  };\n\n  render() {\n    if (this.state.ready === true) {\n      return (\n        <div className=\"order-detail\">\n          <div className=\"order-detail-status\">\n            <h2>\n              Status:{\" \"}\n              <span style={{ backgroundColor: `${this.state.statusColor}` }}>\n                {this.state.status}\n              </span>\n            </h2>\n          </div>\n          <div className=\"order-detail-info\">\n            <p>\n              <strong>Order Number:</strong> {this.state.orderNumber}\n            </p>\n            <p>\n              <strong>Name:</strong> {this.state.customerName}\n            </p>\n            <p>\n              <strong>Due Date:</strong> {this.state.dueDate}\n            </p>\n            <p>\n              <strong> Address:</strong> {this.state.customerAddress}\n            </p>\n            <p>\n              <strong>Phone Number:</strong> {this.state.customerPhone}\n            </p>\n          </div>\n          <div className=\"items-ordered-box\">\n            <div>\n              <h2>Items Ordered</h2>\n            </div>\n            <div className=\"order-box-header\">\n              <h4>Name</h4>\n              <h4>Quantity</h4>\n              <h4>Price</h4>\n            </div>\n            <div className=\"displayed-items\">{this.displayItems()}</div>\n          </div>\n          <div className=\"status-button\">{this.setStatusButton()}</div>\n          <div className=\"order-detail-cost\">\n            <p>\n              <strong>Sub-Total:</strong> ${this.state.subTotal}\n            </p>\n            <p>\n              <strong>Tax:</strong> ${this.state.tax}\n            </p>\n            <p>\n              <strong>Total:</strong> ${this.state.total}\n            </p>\n          </div>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default OrderDetail;\n","import React, {Component} from \"react\";\nimport OrderHeader from \"./OrderHeader\";\n// import ItemForm from '../Catalogue/ItemForm'\nimport OrderGridCard from \"./OrderGridCard\";\nimport OrderSidebar from './OrderSidebar'\nimport OrderDetail from './OrderDetail'\nimport {Route} from 'react-router-dom'\n\nclass Order extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            currentId: \"\"\n            ,orderList: null\n        }\n    }\n\n    setId = (value) => {\n        this.setState({\n            currentId: value\n            , ready: true\n        })\n\n    }\n\n    setList = list => {\n        this.setState({\n            orderList: list\n        })\n    }\n\nrender(){\n  return (\n    <div className=\"order-main\">\n        <Route path=\"/orders\"\n            render={() => {\n                return (\n        <div className=\"order-main\">\n            <OrderHeader component={OrderHeader} /> \n            <div className=\"order-body\">\n                <div className=\"order-sidebar\" style={{ marginLeft: \"10px\", marginRight: \"20px\" }}>\n                    <OrderSidebar url={this.props.url} setList={this.setList} />\n                </div>\n                <Route path=\"/orders\"\n                    render={() => {\n                    if (this.state.orderList === null){\n                    return <OrderGridCard setId={this.setId}  /> \n                    }\n                    else {\n                        return <OrderGridCard setId={this.setId} orderList={this.state.orderList} />\n                    }\n                }}\n                    exact />\n                    \n                \n                <Route path={`/orders/id/${this.state.currentId}`}\n                    render={() => {\n                        if(this.state.ready === true){\n                            return(<OrderDetail url={this.props.url} setId={this.setId} id={this.state.currentId} />)\n                        }\n                        else {return null}\n                        }} exact />\n                \n            </div>\n        </div> \n        );}\n    } /> </div>\n  )}}\n\nexport default Order;\n\n","import React, { Component } from 'react'\n\n\nimport './SignUpForm.css'\n\nclass SignUpForm extends Component {\n\n\n  \n\n  render () {\n    if (this.props.isLoggedIn !== true){\n      \n    return (\n      <div>\n        <h2>Sign Up</h2>\n\n        <form>\n          <div>\n            <label htmlFor='email'>Email</label>\n            <input type='text' name='email' onChange={this.props.handleInput} />\n          </div>\n\n          <div>\n            <label htmlFor='password'>Password</label>\n            <input type='text' name='password' onChange={this.props.handleInput} />\n          </div>\n          <input value='Submit' type='submit' onClick={this.props.handleSignUp} />\n        </form>\n      </div>\n    )\n    }\n    else {return <div><h1>Success! You're now signed up and logged in</h1></div>}\n\n  }\n}\n\nexport default SignUpForm\n","import React, { Component } from 'react'\n\nimport './LogInForm.css'\n\nclass LogInForm extends Component {\n  render () {\n    return (\n      <div>\n        <h2>Log In</h2>\n\n        <form>\n          <div>\n            <label htmlFor='email'>Email</label>\n            <input type='text' name='email' onChange={this.props.handleInput} />\n          </div>\n          <div>\n            <label htmlFor='password'>Password</label>\n            <input type='text' name='password' onChange={this.props.handleInput} />\n          </div>\n          <input value='Submit' type='submit' onClick={this.props.handleLogIn} />\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default LogInForm\n","import React, { Component } from \"react\";\n\nimport \"./LogOut.css\";\n\nclass LogOut extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"logout-page\">\n          <h2> Thanks for Ordering!</h2>\n          <form className=\"logout-form\">\n            <input\n              className=\"logout-input\"\n              value=\"Log Out\"\n              type=\"submit\"\n              onClick={this.props.handleLogOut}\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LogOut;\n","import React, { Component } from \"react\";\nimport { Route, Link, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport Catalogue from \"./components/Catalogue/Catalogue\";\nimport Order from \"./components/Order/Order\";\nimport Button from \"./components/Button/Button\";\nimport SignUpForm from './components/SignUpForm/SignUpForm'\nimport LogInForm from './components/LogInForm/LogInForm'\nimport LogOut from './components/LogOut/LogOut'\nimport axios from 'axios';\n\nlet url = \"https://group-project-mern-backend.herokuapp.com\"\n\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      isLoggedIn: false,\n    };\n\n    this.handleLogOut = this.handleLogOut.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.handleLogIn = this.handleLogIn.bind(this);\n    this.handleSignUp = this.handleSignUp.bind(this);\n  }\n\n  componentDidMount() {\n    if (localStorage.token) {\n      this.setState({\n        isLoggedIn: true,\n      });\n    } else {\n      this.setState({\n        isLoggedIn: false,\n      });\n    }\n  }\n\n  handleLogOut(e) {\n    this.setState({\n      email: \"\",\n      password: \"\",\n      isLoggedIn: false,\n    });\n    localStorage.clear();\n  }\n\n  handleInput(e) {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  handleSignUp(e) {\n    e.preventDefault()\n    axios.post(`${url}/users/signup`, {\n      email: this.state.email,\n      password: this.state.password\n    })\n      .then(response => {\n        localStorage.token = response.data.token\n        this.setState({ isLoggedIn: true })\n      })\n      .catch(err => console.log(err))\n  }\n\n  handleLogIn(e) {\n    e.preventDefault()\n    axios.post(`${url}/users/login`, {\n      email: this.state.email,\n      password: this.state.password\n    })\n      .then(response => {\n        localStorage.token = response.data.token\n        this.setState({ isLoggedIn: true })\n      })\n      .catch(err => console.log(err))\n  }\n\n\n  render() {\n\n    if (this.state.isLoggedIn !== true) {\n      return (\n        <div className=\"App\">\n          <header className=\"nav\">\n            <h1>Welcome to Narwhal Bakery</h1>\n            <div className=\"header-buttons\">\n              <Link to=\"/signup\"><Button type=\"create\" label=\"Sign Up\" /></Link>\n              <Link to=\"/login\"><Button type=\"create\" label=\"Log In\" /></Link>\n            </div>\n          </header>\n          <div className=\"container\">\n            <Route path='/signup'\n              render={(props) => {\n                return (\n                  <SignUpForm url={url} isLoggedIn={this.state.isLoggedIn} handleInput={this.handleInput} handleSignUp={this.handleSignUp} />\n                )\n              }}\n            />\n            <Route path='/logout'\n              render={(props) => {\n                return (\n                  <LogOut url={url} isLoggedIn={this.state.isLoggedIn} handleLogOut={this.handleLogOut} />\n                )\n              }}\n            />\n            <Route path='/login'\n              render={(props) => {\n                return (\n                  <LogInForm url={url} isLoggedIn={this.state.isLoggedIn} handleInput={this.handleInput} handleLogIn={this.handleLogIn} />\n                )\n              }}\n            />\n          </div>\n          <div>\n          </div>\n        </div>\n      )\n    }\n    else {\n      return (\n        <div className=\"App\">\n          <header className=\"nav\">\n            <h1>Welcome to Narwhal Bakery</h1>\n            <div className=\"header-buttons\">\n              <div className=\"nav-buttons\">\n                <Link to=\"/catalog/\"> <Button type=\"create\" label=\"My Catalog\" /></Link>\n                <Link to=\"/orders\"> <Button type=\"create\" label=\"My Orders\" /></Link>\n              </div>\n              <Link to=\"/logout\"><Button type=\"create\" label=\"Log Out\" /></Link>\n            </div>\n          </header>\n          <div className=\"container\">\n            <Route path=\"/\"\n              render={() => { return <Redirect to=\"/catalog\" /> }}\n              exact />\n            <Route\n              path=\"/orders\"\n              render={() => {\n                return <Order url={url} />;\n              }}\n            />\n\n            <Route\n              path=\"/catalog/\"\n              render={() => {\n                return <Catalogue url={url} />;\n              }}\n            />\n            <Route\n              path=\"/signup\"\n              render={props => {\n                return (\n                  <SignUpForm\n                    url={url}\n                    isLoggedIn={this.state.isLoggedIn}\n                    handleInput={this.handleInput}\n                    handleSignUp={this.handleSignUp}\n                    handleLogOut={this.handleLogOut}\n                  />\n                );\n              }}\n            />\n            <Route\n              path=\"/logout\"\n              render={props => {\n                return (\n                  <LogOut\n                    url={url}\n                    isLoggedIn={this.state.isLoggedIn}\n                    handleLogOut={this.handleLogOut}\n                  />\n                );\n              }}\n            />\n            <Route\n              path=\"/login\"\n              render={props => {\n                return (\n                  <LogInForm\n                    url={url}\n                    isLoggedIn={this.state.isLoggedIn}\n                    handleInput={this.handleInput}\n                    handleLogIn={this.handleLogIn}\n                  />\n                );\n              }}\n            />\n          </div>\n          <div></div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}